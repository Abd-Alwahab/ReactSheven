{"version":3,"sources":["logo.svg","Nav.js","Photos.js","Posts.js","Users.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","react_default","a","createElement","className","NavLink","to","exact","Photos","state","photos","_this2","this","axios","get","then","photo","setState","data","_this3","map","phots","i","src","url","alt","title","Component","Posts","posts","post","body","Users","users","user","name","username","href","email","Home","App","BrowserRouter","src_Nav_0","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.264c7165.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Nav.css';\r\n\r\n\r\nconst Nav = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <nav className=\"nav\">\r\n\r\n                    <h1 className=\"logo\">Logo</h1>\r\n\r\n                <ul className=\"nav__list\">\r\n                    <li className=\"nav__item\"><NavLink to=\"/home\" exact className=\"nav__link\">Home</NavLink></li>\r\n                    <li className=\"nav__item\"><NavLink to=\"/photos\" className=\"nav__link\">Photos</NavLink></li>\r\n                    <li className=\"nav__item\"><NavLink to=\"/users\" className=\"nav__link\">Users</NavLink></li>\r\n                    <li className=\"nav__item\"><NavLink to=\"/posts\" className=\"nav__link\">Posts</NavLink></li>\r\n\r\n                </ul>\r\n            \r\n            </nav>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default Nav","import React ,{ Component } from 'react';\r\nimport './Photos.css';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass Photos extends Component {\r\n\r\n\r\n    state = {\r\n        photos : []\r\n    }\r\n\r\n\r\n    componentDidMount()  {\r\n\r\n        axios.get('https://jsonplaceholder.typicode.com/photos')\r\n        .then(photo => {\r\n\r\n            this.setState({\r\n                photos : photo.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"photos-content\">\r\n            <h1>Photos Page</h1>\r\n\r\n            <div className=\"photos\">\r\n            \r\n                {this.state.photos.map((phots,i) => {\r\n\r\n                    return (\r\n                        <div className=\"photo__box\">\r\n                            <img src={this.state.photos[i].url} className=\"photo__img\" alt=\"phots\" />\r\n                        <h3 className=\"photo__name\">\r\n                            {this.state.photos[i].title}\r\n                        </h3>\r\n                        </div>\r\n                    )\r\n\r\n                })}\r\n\r\n            </div>\r\n\r\n\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Photos;","import React ,{ Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Posts.css';\r\n\r\n\r\nclass Posts extends Component {\r\n\r\n    state = {\r\n        posts: []\r\n    }\r\n\r\n\r\n    \r\n    componentDidMount() {\r\n        axios.get('https://jsonplaceholder.typicode.com/posts')\r\n        .then(post => {\r\n\r\n            this.setState({\r\n                posts : post.data\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"posts-content\">\r\n                 <h1>Posts Page</h1>\r\n\r\n\r\n                    <div className=\"posts\">\r\n                    \r\n                        {this.state.posts.map((post,i) => {\r\n\r\n                            return (\r\n\r\n                                <div className=\"post__box\">\r\n                                        <h3 className=\"post__title\">\r\n                                            {this.state.posts[i].title}\r\n                                        </h3>\r\n\r\n                                        <p className=\"post__desc\">\r\n                                        {this.state.posts[i].body}\r\n                                    </p>\r\n\r\n                                </div>\r\n                            );\r\n\r\n                        })}\r\n\r\n                    </div>\r\n\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Posts;","import React ,{ Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Users.css';\r\n\r\n\r\nclass Users extends Component {\r\n\r\n    state = {\r\n\r\n        users: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(user => {\r\n\r\n            this.setState({\r\n                users : user.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"users-content\">\r\n                <h1>User Page</h1>\r\n\r\n\r\n              \r\n                <div className=\"users\">                     \r\n            \r\n                            {this.state.users.map((user,i) =>{\r\n                                return (\r\n                                    <div className=\"user__box\">    \r\n                                        <h3 className=\"user__name\">\r\n                                            {this.state.users[i].name}  \r\n                                        </h3>\r\n                                        <p className=\"user__uid\">\r\n                                             {this.state.users[i].username} \r\n                                        </p>\r\n                                        <a href=\"\" className=\"user__email\">\r\n                                             {this.state.users[i].email} \r\n                                        </a>\r\n                                    </div>\r\n                                );\r\n                                     })\r\n                                } \r\n\r\n                </div>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Users;","import React ,{ Component } from 'react';\r\nimport './Home.css';\r\nimport Nav from './Nav';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                <div className=\"header\">\r\n                \r\n                <div className=\"header-box\">\r\n                \r\n                    <h1>abd alwahab</h1>\r\n                    <p>React Project Using React and JSON</p>\r\n                    <a href=\"\" className=\"btn\">View Code</a>\r\n                </div>\r\n                \r\n                </div>\r\n                \r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport { BrowserRouter , Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Nav from './Nav';\nimport Photos from './Photos';\nimport Posts from './Posts';\nimport Users from './Users';\nimport Home from './Home';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n         <Nav />\n         <Route path=\"/users\" component={Users}/>\n         <Route path=\"/posts\" component={Posts}/>\n         <Route path=\"/photos\" component={Photos}/>\n         <Route path=\"/home\" component={Home}/>\n\n         </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}